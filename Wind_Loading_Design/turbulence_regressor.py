
from IPython.display import display, HTML
display(HTML("<style>.container { width:90% !important; }</style>"))

import math
import numpy as np
import plotly as pl
import plotly.graph_objects as go
import seaborn
import scienceplots
import pandas as pd

import matplotlib.pyplot as plt
import matplotlib.cm as cm

import fpdf


data_points = [
    
    # lv = 0.21
    [2.18, 0.10, 0.21],
    [2.18, 0.20, 0.21],
    [2.18, 0.40, 0.21],
    [2.18, 0.80, 0.21],
    [2.18, 1.59, 0.21],
    [2.20, 3.18, 0.21],
    [2.19, 6.36, 0.21],
    [2.19, 12.71, 0.21],
    [2.19, 25.40, 0.21],
    [2.19, 50.74, 0.21],
    [2.18, 0.11, 0.21],
    [2.18, 0.12, 0.21],
    [2.18, 0.13, 0.21],
    [2.18, 0.15, 0.21],
    [2.19, 0.16, 0.21],
    [2.18, 0.18, 0.21],
    [2.18, 0.19, 0.21],
    [2.18, 0.21, 0.21],
    [2.18, 0.23, 0.21],
    [2.18, 0.25, 0.21],
    [2.18, 0.28, 0.21],
    [2.17, 0.31, 0.21],
    [2.18, 0.34, 0.21],
    [2.18, 0.37, 0.21],
    [2.17, 0.41, 0.21],
    [2.18, 0.45, 0.21],
    [2.18, 0.49, 0.21],
    [2.18, 0.54, 0.21],
    [2.18, 0.59, 0.21],
    [2.18, 0.65, 0.21],
    [2.16, 0.71, 0.21],
    [2.18, 0.78, 0.21],
    [2.17, 0.86, 0.21],
    [2.17, 0.94, 0.21],
    [2.18, 1.04, 0.21],
    [2.17, 1.14, 0.21],
    [2.17, 1.25, 0.21],
    [2.18, 1.37, 0.21],
    [2.17, 1.50, 0.21],
    [2.18, 1.65, 0.21],
    [2.18, 1.81, 0.21],
    [2.17, 2.00, 0.21],
    [2.17, 2.19, 0.21],
    [2.17, 2.40, 0.21],
    [2.16, 2.64, 0.21],
    [2.11, 2.90, 0.21],
    [2.16, 3.18, 0.21],
    [2.22, 3.49, 0.21],
    [2.18, 3.83, 0.21],
    [2.17, 4.21, 0.21],
    [2.17, 4.62, 0.21],
    [2.16, 5.07, 0.21],
    [2.17, 5.57, 0.21],
    [2.17, 6.12, 0.21],
    [2.17, 6.72, 0.21],
    [2.17, 7.37, 0.21],
    [2.18, 8.10, 0.21],
    [2.17, 8.89, 0.21],
    [2.17, 9.76, 0.21],
    [2.17, 10.72, 0.21],
    [2.17, 11.77, 0.21],
    [2.17, 12.92, 0.21],
    [2.17, 14.19, 0.21],
    [2.17, 15.58, 0.21],
    [2.18, 17.11, 0.21],
    [2.17, 18.78, 0.21],
    [2.17, 20.62, 0.21],
    [2.18, 22.64, 0.21],
    [2.18, 24.86, 0.21],
    [2.17, 27.30, 0.21],
    [2.24, 29.97, 0.21],
    [2.17, 32.91, 0.21],
    [2.17, 36.14, 0.21],
    [2.17, 39.68, 0.21],
    [2.17, 43.57, 0.21],
    [2.17, 47.84, 0.21],
    [2.17, 52.52, 0.21],
    [2.17, 57.67, 0.21],
    [2.17, 63.32, 0.21],
    [2.17, 69.53, 0.21],
    [2.17, 76.34, 0.21],
    [2.17, 83.82, 0.21],
    [2.17, 92.04, 0.21], 
    
    # lv = 0.2
    [2.78, 0.10, 0.20],
    [3.07, 0.20, 0.20],
    [3.05, 0.40, 0.20],
    [3.09, 0.80, 0.20],
    [3.07, 1.59, 0.20],
    [3.09, 3.18, 0.20],
    [3.09, 6.36, 0.20],
    [3.09, 12.71, 0.20],
    [3.05, 25.40, 0.20],
    [3.04, 50.74, 0.20],
    
    # lv = 0.19
    [3.41, 0.10, 0.19],
    [4.27, 0.20, 0.19],
    [4.68, 0.40, 0.19],
    [4.50, 0.80, 0.19],
    [4.57, 1.59, 0.19],
    [4.57, 3.18, 0.19],
    [4.59, 6.36, 0.19],
    [4.59, 12.71, 0.19],
    [4.59, 25.40, 0.19],
    [4.57, 50.74, 0.19],
    
    
    # lv = 0.18
    [0.20, 5.52, 0.18],
    [0.40, 7.14, 0.18],
    [0.80, 7.09, 0.18],
    [1.59, 7.14, 0.18],
    [3.18, 7.16, 0.18],
    [6.36, 7.21, 0.18],
    [12.71, 7.19, 0.18],
    [25.40, 7.20, 0.18],
    [50.74, 7.14, 0.18],
    [0.11, 4.33, 0.18],
    [0.12, 4.49, 0.18],
    [0.13, 4.67, 0.18],
    [0.15, 4.87, 0.18],
    [0.16, 5.04, 0.18],
    [0.18, 5.25, 0.18],
    [0.19, 5.45, 0.18],
    [0.21, 5.67, 0.18],
    [0.23, 5.93, 0.18],
    [0.25, 6.12, 0.18],
    [0.28, 6.26, 0.18],
    [0.31, 6.44, 0.18],
    [0.34, 6.66, 0.18],
    [0.37, 7.04, 0.18],
    [0.41, 7.13, 0.18],
    [0.45, 7.16, 0.18],
    [0.49, 7.11, 0.18],
    [0.54, 7.10, 0.18],
    [0.59, 7.10, 0.18],
    [0.65, 7.14, 0.18],
    [0.71, 7.13, 0.18],
    [0.78, 7.10, 0.18],
    [0.86, 7.10, 0.18],
    [0.94, 7.10, 0.18],
    [1.04, 7.10, 0.18],
    [1.14, 7.10, 0.18],
    [1.25, 7.10, 0.18],
    [1.37, 7.10, 0.18],
    [1.50, 7.10, 0.18],
    [1.65, 7.17, 0.18],
    [1.81, 7.17, 0.18],
    [1.99, 7.17, 0.18],
    [2.19, 7.17, 0.18],
    [2.40, 7.18, 0.18],
    [2.64, 7.15, 0.18],
    [2.90, 7.15, 0.18],
    [3.18, 7.13, 0.18],
    [3.49, 7.10, 0.18],
    [3.83, 7.15, 0.18],
    [4.21, 7.13, 0.18],
    [4.62, 7.15, 0.18],
    [5.07, 7.11, 0.18],
    [5.57, 7.13, 0.18],
    [6.12, 7.11, 0.18],
    [6.72, 7.15, 0.18],
    [7.37, 7.13, 0.18],
    [8.10, 7.09, 0.18],
    [8.89, 7.11, 0.18],
    [9.76, 7.15, 0.18],
    [10.72, 7.15, 0.18],
    [11.77, 7.14, 0.18],
    [12.92, 7.15, 0.18],
    [14.19, 7.15, 0.18],
    [15.58, 7.14, 0.18],
    [17.11, 7.15, 0.18],
    [18.78, 7.15, 0.18],
    [20.62, 7.14, 0.18],
    [22.64, 7.15, 0.18],
    [24.86, 7.15, 0.18],
    [27.30, 7.15, 0.18],
    [29.97, 7.06, 0.18],
    [32.91, 7.14, 0.18],
    [36.14, 7.15, 0.18],
    [39.68, 7.07, 0.18],
    [43.57, 7.15, 0.18],
    [47.84, 7.15, 0.18],
    [52.52, 7.15, 0.18],
    [57.67, 7.14, 0.18],
    [63.32, 7.15, 0.18],
    [69.53, 7.21, 0.18],
    [76.34, 7.10, 0.18],
    [83.82, 7.10, 0.18],
    [92.04, 7.10, 0.18],
    
    # lv = 0.17
    [0.10, 5.31, 0.17],
    [0.20, 7.25, 0.17],
    [0.40, 9.31, 0.17],
    [0.80, 11.74, 0.17],
    [1.59, 11.37, 0.17],
    [3.18, 11.73, 0.17],
    [6.36, 11.78, 0.17],
    [12.71, 11.78, 0.17],
    [25.40, 11.75, 0.17],
    [50.74, 11.88, 0.17],
     
    # lv = 0.16
    [0.10, 6.52, 0.16],
    [0.20, 9.42, 0.16],
    [0.40, 12.32, 0.16],
    [0.80, 16.03, 0.16],
    [1.59, 19.61, 0.16],
    [3.18, 19.80, 0.16],
    [6.36, 19.88, 0.16],
    [12.71, 19.89, 0.16],
    [25.40, 19.84, 0.16],
    [50.74, 19.69, 0.16],
    
    # lv = 0.15
    [0.10, 9.13, 0.15],
    [0.20, 12.36, 0.15],
    [0.40, 16.27, 0.15],
    [0.80, 21.28, 0.15],
    [1.59, 26.33, 0.15],
    [3.18, 32.17, 0.15],
    [6.36, 32.32, 0.15],
    [12.71, 31.73, 0.15],
    [25.40, 32.32, 0.15],
    [50.74, 32.45, 0.15],

    
    # lv = 0.14
    [0.10, 11.48, 0.14],
    [0.20, 15.98, 0.14],
    [0.40, 21.16, 0.14],
    [0.80, 28.92, 0.14],
    [1.59, 36.71, 0.14],
    [3.18, 42.72, 0.14],
    [6.36, 50.00, 0.14],
    [12.71, 50.13, 0.14],
    [25.40, 50.12, 0.14],
    [50.74, 50.16, 0.14],
    [0.11, 11.99, 0.14],
    [0.12, 12.54, 0.14],
    [0.13, 13.19, 0.14],
    [0.15, 13.86, 0.14],
    [0.16, 14.51, 0.14],
    [0.18, 15.15, 0.14],
    [0.19, 15.80, 0.14],
    [0.21, 16.55, 0.14],
    [0.23, 17.28, 0.14],
    [0.25, 18.04, 0.14],
    [0.28, 18.79, 0.14],
    [0.31, 19.57, 0.14],
    [0.34, 20.24, 0.14],
    [0.37, 20.68, 0.14],
    [0.41, 21.41, 0.14],
    [0.45, 22.81, 0.14],
    [0.49, 23.66, 0.14],
    [0.54, 24.54, 0.14],
    [0.59, 25.29, 0.14],
    [0.65, 26.26, 0.14],
    [0.71, 27.22, 0.14],
    [0.78, 28.06, 0.14],
    [0.86, 29.29, 0.14],
    [0.94, 29.85, 0.14],
    [1.04, 30.63, 0.14],
    [1.14, 31.03, 0.14],
    [1.25, 31.55, 0.14],
    [1.37, 33.72, 0.14],
    [1.50, 35.70, 0.14],
    [1.65, 35.82, 0.14],
    [1.81, 37.32, 0.14],
    [1.99, 35.94, 0.14],
    [2.19, 39.79, 0.14],
    [2.40, 39.59, 0.14],
    [2.64, 40.48, 0.14],
    [2.90, 41.23, 0.14],
    [3.18, 41.95, 0.14],
    [3.49, 42.65, 0.14],
    [3.83, 44.78, 0.14],
    [4.21, 45.86, 0.14],
    [4.62, 46.83, 0.14],
    [5.07, 47.93, 0.14],
    [5.57, 48.73, 0.14],
    [6.12, 49.54, 0.14],
    [6.72, 49.44, 0.14],
    [7.37, 49.53, 0.14],
    [8.10, 49.66, 0.14],
    [8.89, 49.76, 0.14],
    [9.76, 49.64, 0.14],
    [10.72, 49.55, 0.14],
    [11.77, 49.42, 0.14],
    [12.92, 49.55, 0.14],
    [14.19, 49.57, 0.14],
    [15.58, 49.45, 0.14],
    [17.11, 49.66, 0.14],
    [18.78, 49.54, 0.14],
    [20.62, 49.53, 0.14],
    [22.64, 49.66, 0.14],
    [24.86, 49.53, 0.14],
    [27.30, 49.67, 0.14],
    [29.97, 49.55, 0.14],
    [32.91, 49.54, 0.14],
    [36.14, 49.66, 0.14],
    [39.68, 49.56, 0.14],
    [43.57, 49.54, 0.14],
    [47.84, 49.65, 0.14],
    [52.52, 49.53, 0.14],
    [57.67, 49.53, 0.14],
    [63.32, 49.66, 0.14],
    [69.53, 49.43, 0.14],
    [76.34, 49.56, 0.14],
    [83.82, 49.65, 0.14],
    [92.04, 49.53, 0.14],

    # lv = 0.13
    [0.10, 15.31, 0.13],
    [0.20, 21.30, 0.13],
    [0.40, 29.28, 0.13],
    [0.80, 37.94, 0.13],
    [1.59, 46.04, 0.13],
    [3.18, 53.85, 0.13],
    [6.36, 63.66, 0.13],
    [12.71, 72.83, 0.13],
    [25.40, 72.92, 0.13],
    [50.74, 74.49, 0.13],

    # lv = 0.12
    [0.10, 21.65, 0.12],
    [0.20, 29.27, 0.12],
    [0.40, 38.40, 0.12],
    [0.80, 49.01, 0.12],
    [1.59, 59.46, 0.12],
    [3.18, 70.46, 0.12],
    [6.36, 81.76, 0.12],
    [12.71, 96.74, 0.12],
    [25.40, 101.45, 0.12],
    [50.74, 101.31, 0.12],

    # lv = 0.11
    [0.20, 38.34, 0.11],
    [0.40, 50.47, 0.11],
    [0.80, 62.25, 0.11],
    [1.59, 76.28, 0.11],
    [3.18, 90.01, 0.11],
    [6.36, 103.24, 0.11],
    [12.71, 117.43, 0.11],
    [25.40, 131.18, 0.11],
    [50.74, 137.11, 0.11],

    # lv = 0.10
    [0.20, 55.65, 0.10],
    [0.40, 66.67, 0.10],
    [0.80, 80.97, 0.10],
    [1.59, 98.15, 0.10],
    [3.18, 113.76, 0.10],
    [6.36, 130.88, 0.10],
    [12.71, 147.17, 0.10],
    [25.40, 163.77, 0.10],
    [50.74, 179.29, 0.10],
    
    #lv = 0.09
    [0.20, 81.53, 0.09],
    [0.40, 84.61, 0.09],
    [0.80, 103.91, 0.09],
    [1.59, 121.01, 0.09],
    [3.18, 143.30, 0.09],
    [6.36, 164.12, 0.09],
    [12.71, 185.10, 0.09],
    
    # lv = 0.08
    [0.11, 115.81, 0.08],
    [0.12, 115.72, 0.08],
    [0.13, 115.52, 0.08],
    [0.15, 115.78, 0.08],
    [0.16, 115.49, 0.08],
    [0.18, 115.49, 0.08],
    [0.19, 115.78, 0.08],
    [0.21, 115.76, 0.08],
    [0.23, 115.48, 0.08],
    [0.25, 115.81, 0.08],
    [0.28, 115.51, 0.08],
    [0.31, 115.66, 0.08],
    [0.34, 115.99, 0.08],
    [0.37, 115.52, 0.08],
    [0.41, 115.89, 0.08],
    [0.45, 116.06, 0.08],
    [0.49, 116.06, 0.08],
    [0.54, 119.06, 0.08],
    [0.59, 122.25, 0.08],
    [0.65, 125.70, 0.08],
    [0.71, 128.25, 0.08],
    [0.78, 135.93, 0.08],
    [0.86, 135.56, 0.08],
    [0.94, 135.71, 0.08],
    [1.04, 136.61, 0.08],
    [1.14, 144.87, 0.08],
    [1.25, 147.72, 0.08],
    [1.37, 151.12, 0.08],
    [1.50, 154.36, 0.08],
    [1.65, 157.68, 0.08],
    [1.81, 160.95, 0.08],
    [1.99, 164.62, 0.08],
    [2.19, 167.67, 0.08],
    [2.40, 171.41, 0.08],
    [2.64, 174.33, 0.08],
    [2.90, 178.20, 0.08],
    [3.18, 181.66, 0.08],
    [3.49, 184.82, 0.08],
    [3.83, 188.19, 0.08],
    [4.21, 191.75, 0.08],
    [4.62, 196.13, 0.08],
    [5.07, 198.64, 0.08],
    [5.57, 199.64, 0.08],

    # lv = 0.07
    [0.11, 161.50, 0.07],
    [0.12, 161.40, 0.07],
    [0.13, 161.08, 0.07],
    [0.15, 161.44, 0.07],
    [0.16, 161.04, 0.07],
    [0.18, 161.05, 0.07],
    [0.19, 161.44, 0.07],
    [0.21, 161.06, 0.07],
    [0.23, 161.04, 0.07],
    [0.25, 161.49, 0.07],
    [0.28, 161.08, 0.07],
    [0.31, 161.36, 0.07],
    [0.34, 161.48, 0.07],
    [0.37, 161.07, 0.07],
    [0.41, 167.19, 0.07],
    [0.45, 161.45, 0.07],
    [0.49, 166.83, 0.07],
    [0.54, 163.05, 0.07],
    [0.59, 161.52, 0.07],
    [0.65, 161.84, 0.07],
    [0.71, 163.58, 0.07],
    [0.78, 167.26, 0.07],
    [0.86, 171.14, 0.07],
    [0.94, 175.48, 0.07],
    [1.04, 179.92, 0.07],
    [1.14, 190.61, 0.07],
    [1.25, 192.40, 0.07],
    [1.37, 194.94, 0.07],
    [1.50, 197.80, 0.07]
]
    
    

import pandas as pd
import numpy as np
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
import pickle

class TurbulenceRegressor:
    def __init__(self, degree=3):
        self.degree = degree
        self.poly = PolynomialFeatures(degree=self.degree)
        self.model = LinearRegression()
        self.feature_names = None

    def fit(self, X, y):
        self.feature_names = X.columns
        X_poly = self.poly.fit_transform(X)
        self.model.fit(X_poly, y)
        
    def predict(self, X):
        if isinstance(X, pd.DataFrame):
            X_poly = self.poly.transform(X)
        else:
            X_df = pd.DataFrame(X, columns=self.feature_names)
            X_poly = self.poly.transform(X_df)
        return self.model.predict(X_poly)

    def save_model(self, filename):
        with open(filename, 'wb') as file:
            pickle.dump((self.poly, self.model, self.feature_names), file)

    def load_model(self, filename):
        with open(filename, 'rb') as file:
            self.poly, self.model, self.feature_names = pickle.load(file)


df = pd.DataFrame(data_points, columns=['z', 'd', 'lv'])
X = df[['z', 'd']]
y = df['lv']

turbulence_regressor = TurbulenceRegressor(degree=3)
turbulence_regressor.fit(X, y)

# Save the trained model
turbulence_regressor.save_model('turbulence_regressor.pkl')
